Лабораторная работа №4
По теме: операционные системы
Цель: приобретение навыков работы с командной строкой в Unix-подобных
операционных системах.
Задание: выполнить пункты данной работы и подготовить отчет.
Описание:
Запустите командную строку
Выведете справку на команду man при помощи ключа -h или --help
(man -h или man --help)
Изучите принципы действия команд
which -используется для определения местоположения данного исполняемого файла
 fg - команда возобновления работы задачи и передачи ей управления в командных оболочках, совместимых со стандартом POSIX
 bg - команда управления заданиями в Unix и Unix-подобных операционных системах, возобновляющая выполнение приостановленного процесса в фоновом режиме, возобновляющийся процесс продолжает выполняться в фоне без ввода пользователем каких-либо команд с терминала
 ps - Команда ps выводит список текущих процессов на вашем сервере в виде таблицы, с которой можно удобно работать: сортировать, изменять количество колонок и прочие.
 jobs - Команда jobs отображает все текущие задачи вместе с их статусами. Задача — это процесс, запущенный в фоновом режиме.
 kill -Если у вас есть не отвечающая программа, вы можете завершить её вручную, используя команду kill. Команда отправит определённый сигнал неверно работающему приложению и даст ему команду прекратить работу.
 ln - создать «жёсткую» (физическую) ссылку на файл или директорию
 stat -инструмент командной строки, используемый для отображения подробной информации о файле или файловой системе
 ping -диагностика неисправностей сети
 chmod -chmod — ещё одна команда Linux, используемая для изменения разрешений на чтение, запись и выполнение файлов и каталогов.
 chown - Команда chown позволяет изменить или перенести владельца файла на указанное имя пользователя
 dd -это программа Unix, утилита командной строки, которую в Linux используют для низкоуровневого копирования и конвертации файлов
 yes - бесконечно выводящая аргументы командной строки, разделённые пробелами до тех пор, пока не будет убита
 uname - Команда uname, сокращение от Unix Name, выведет подробную информацию о вашей системе Linux, такую как имя машины, операционная система, ядро и т. д.
 grep -Ещё одна базовая команда Linux, которая, несомненно, пригодится для повседневного использования — grep. С её помощью совершается поиск по всему тексту в текущем файле.
 exit -является встроенной командой, предназначенной для завершения процесса командной оболочки с кодом успешного завершения или кодом ошибки, если такой был передан в качестве аргумента

 Создайте рабочую директорию с любым названием и перейдите в неё
 Определите версию командного интерпретатора и запишите его в файл
 Выведете значение системной переменной $PATH в тот же файл, что и
в предыдущем пункте, не перезаписав прошлый текст
 Выведете сведения о системе в другой файл
 Измените права доступа к файлам, чтобы доступ на чтение и запись
была только у владельца файла, у группы – только на чтение, а у
остальных - без доступа
 Выведете полные сведения о файлах в текущем каталоге
 Посчитайте количество запущенных процессов.
 Запустите новый процесс sh (либо любой другой shell)
 Посчитайте количество запущенных процессов сейчас.
 Завершите работу текущего shell
 Изучите работу текстового редактора nano
 Создайте файл и запишите туда свое любимое стихотворение или абзац
из книги
 Выведете на экран сведения о файле /etc/passwd
 Изучите особенности работы команды help
 С помощью команды help изучите конструкции if, for, while, until,
[условное выражение]
 Создайте рабочую директорию и перейдите в неё
 Объявите переменную hello и присвойте ей значение «Hello, world!».
Выведете ее на экран.
 Выведете на экран случайное число. Для этого используйте
встроенную переменную $RANDOM.
 Создайте файл и запишите туда следующий скрипт
 #!/bin/bash
echo “Hello, world!”
 Сделайте файл исполняемым и запустите его.
 Создайте файл и запишите в него скрипт, используя любые из
конструкций if, for, while, until, который будет выполнять задание по
варианту по журналу:
 Вывести на экран четные или нечетные (в зависимости от
параметра запуска) числа в диапазоне от 1 до числа, заданного
пользователем.
 Вывести на экран количество пустых файлов в директории, путь
к которой скрипту как параметр.
 Вывести на экран количество пользователей,
зарегистрированных в системе
 Вывести на экран рекурсивно все родительские каталоги
относительно текущего.
 Удалите рабочую директорию
